name: Docker Build, Publish & Deploy

env:
  AZURE_WEBAPP_NAME: cloud-isen-bg
  WORKING_DIRECTORY: '.'        # set this to the path to your path of working directory inside github repository, defaults to the repository root
  PYTHON_VERSION: '3.12'        # set the version to use
  STARTUP_COMMAND: ''           # set this to the startup command required to start the gunicorn server. default it is empty
  CONTAINER_REGISTRY : isencloudbg.azurecr.io


on:
  push:
    branches: 
      - main

permissions:
  contents: read
  packages: write
  id-token: write
  
jobs:
  build_and_publish:
    runs-on: ubuntu-latest

    steps:
      - name: set lower case repo name
        run: echo "REPO_LC=${REPO,,}" >>${GITHUB_ENV}
        env:
          REPO: '${{ github.repository }}'
   
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Docker Registry/Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build Docker image
        run: docker build -t ghcr.io/$REPO_LC:latest . 
            
      - name: Publish Docker image
        run: docker push ghcr.io/$REPO_LC:latest

  # Dowanload_azure:
  #   runs-on: ubuntu-latest
  #   needs: build_and_publish
  #   steps: 
  #   - name: Install Azure CLI
  #     run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

  Deploy_to_azure:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build_and_publish
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: set lower case repo name
        run: echo "REPO_LC=${REPO,,}" >>${GITHUB_ENV}
        env:
          REPO: '${{ github.repository }}'

      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          # enable-AzPSSession: false
          # environment: azurecloud
          # allow-no-subscriptions: false
          # audience: api://AzureADTokenExchange  
          # auth-type: SERVICE_PRINCIPAL
          # client-id: ${{ secrets.REGISTRY_USERNAME }}
          # tenant-id: 054ac6ef-3ff9-4003-8495-fcffd3e9cbc9
        
      - name: login to azure docker
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}    

      - name: Docker Build & Push to ACR
        run: docker build -t ${{ env.CONTAINER_REGISTRY }}/$REPO_LC:latest .

      - name: publishazure
        run: docker push ${{ env.CONTAINER_REGISTRY }}/$REPO_LC:latest 
        
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          # images: ${{ env.CONTAINER_REGISTRY }}/schivass/fork_vigneron_monteil:latest
          package: './examples'

      - name: logout
        run: az logout
